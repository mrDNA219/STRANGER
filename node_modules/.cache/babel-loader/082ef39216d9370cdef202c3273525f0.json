{"ast":null,"code":"var _jsxFileName = \"/Users/francis/Desktop/Bootcamp/Stranger's Things/src/components/EditPost.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { updatePost, deletePosts } from \"../api\";\nimport \"../style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditPost = _ref => {\n  _s();\n\n  let {\n    posts,\n    token,\n    navigate,\n    retrievePosts\n  } = _ref;\n  useEffect(() => {\n    retrievePosts();\n  }, []);\n  const {\n    postID\n  } = useParams();\n  const [currentPost] = posts.filter(post => post._id === postID);\n  const {\n    title,\n    description,\n    location,\n    price,\n    willDeliver\n  } = currentPost;\n  const [newTitle, setNewTitle] = useState(title);\n  const [newDescription, setNewDescription] = useState(description);\n  const [newLocation, setNewLocation] = useState(location);\n  const [newPrice, setNewPrice] = useState(price);\n  const [newWillDeliver, setNewWillDeliver] = useState(willDeliver);\n\n  async function editPost() {\n    const updatedPost = {\n      token: token,\n      title: newTitle,\n      description: newDescription,\n      location: newLocation,\n      price: newPrice,\n      willDeliver: newWillDeliver,\n      _id: postID\n    };\n    await updatePost(updatedPost);\n    retrievePosts();\n    navigate('./posts');\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: e => {\n      e.preventDefault();\n      editPost();\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"inputs\",\n      type: \"text\",\n      placeholder: title,\n      onChange: e => setNewTitle(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"inputs\",\n      type: \"text\",\n      placeholder: description,\n      onChange: e => setNewDescription(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"inputs\",\n      type: \"text\",\n      placeholder: location,\n      onChange: e => setNewLocation(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"inputs\",\n      type: \"text\",\n      placeholder: price,\n      onChange: e => setNewPrice(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"checkbox-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          placeholder: willDeliver,\n          onChange: e => setNewWillDeliver(e.target.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"check box if you can deliver item(s)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Edit Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => deletePosts(token, postID),\n      children: \"Delete Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 13\n  }, this);\n};\n\n_s(EditPost, \"CvP34iTqHpDNzIU/4IY8pehoTDA=\", false, function () {\n  return [useParams];\n});\n\n_c = EditPost;\nexport default EditPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditPost\");","map":{"version":3,"names":["React","useState","useEffect","useParams","updatePost","deletePosts","EditPost","posts","token","navigate","retrievePosts","postID","currentPost","filter","post","_id","title","description","location","price","willDeliver","newTitle","setNewTitle","newDescription","setNewDescription","newLocation","setNewLocation","newPrice","setNewPrice","newWillDeliver","setNewWillDeliver","editPost","updatedPost","e","preventDefault","target","value","checked"],"sources":["/Users/francis/Desktop/Bootcamp/Stranger's Things/src/components/EditPost.js"],"sourcesContent":["import {React, useState, useEffect} from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport {updatePost, deletePosts} from \"../api\"\nimport \"../style.css\"\n\n\nconst EditPost = ({ posts, token, navigate, retrievePosts}) => {\n    useEffect(() => {\n        retrievePosts()\n    }, [])\n\n    \n    const { postID } = useParams();\n\n    const [currentPost] = posts.filter(post => post._id === postID);\n    const {title, description, location, price, willDeliver} = currentPost;\n   \n    const [newTitle, setNewTitle] = useState(title)\n    const [newDescription, setNewDescription] = useState(description)\n    const [newLocation, setNewLocation] = useState(location)\n    const [newPrice, setNewPrice] = useState(price)\n    const [newWillDeliver, setNewWillDeliver] = useState(willDeliver)\n    \n    async function editPost() {\n            const updatedPost = {\n               token: token,\n               title: newTitle,\n               description: newDescription,\n               location: newLocation,\n               price: newPrice,\n               willDeliver: newWillDeliver,\n               _id: postID\n            }\n            await updatePost(updatedPost)\n            retrievePosts();\n            navigate('./posts')\n        }\n    return (\n            <form onSubmit={(e) => {\n                e.preventDefault();\n                editPost();\n            }}>\n                <input className=\"inputs\" type=\"text\" placeholder={title} onChange={(e) => setNewTitle(e.target.value)}></input>\n                <input className=\"inputs\" type=\"text\" placeholder={description} onChange={(e) => setNewDescription(e.target.value)}></input>\n                <input className=\"inputs\" type=\"text\" placeholder={location} onChange={(e) => setNewLocation(e.target.value)}></input>\n                <input className=\"inputs\" type=\"text\" placeholder={price} onChange={(e) => setNewPrice(e.target.value)}></input>\n                <div className=\"checkbox-wrapper\">\n                <label>\n                <input type=\"checkbox\" placeholder={willDeliver} onChange={(e) => setNewWillDeliver(e.target.checked)}></input>\n                <span>check box if you can deliver item(s)</span>\n                </label>\n                </div>\n                <button type='submit'>Edit Post</button>\n                <button onClick={() => deletePosts(token, postID)}>Delete Post</button>\n                \n    \n            </form>\n        )\n\n}\nexport default EditPost"],"mappings":"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"},"metadata":{},"sourceType":"module"}