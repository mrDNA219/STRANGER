{"ast":null,"code":"var _jsxFileName = \"/Users/francis/Desktop/Bootcamp/Stranger's Things/src/components/Profile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport '../style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Profile = _ref => {\n  _s();\n\n  let {\n    user,\n    getMe,\n    posts\n  } = _ref;\n  useEffect(() => {\n    getMe();\n  }, []);\n  const messages = user.messages;\n  const userID = user._id;\n\n  function getUserPosts(post) {\n    const {\n      isAuthor\n    } = post;\n\n    if (isAuthor === true) {\n      return post;\n    }\n  }\n\n  const userPosts = posts.map(post => getUserPosts(post));\n\n  if (userPosts) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Your Posts!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this), userPosts.map(post => {\n        const {\n          title,\n          description,\n          location,\n          price,\n          willDeliver,\n          isAuthor,\n          _id\n        } = post;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"posts\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Description: \", description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Location: \", location]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Price: \", price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Will Deliver: \", [willDeliver].toString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this)]\n        }, _id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 17\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this);\n  }\n\n  if (messages) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"posts\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Messages from other users!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), messages.map(message => {\n          const fromUserID = message.fromUser._id;\n          const {\n            username\n          } = message.fromUser;\n          const {\n            title\n          } = message.post;\n\n          if (userID !== fromUserID) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"messages-from-you\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"From User: \", username, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Message: \", message.content]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Post Reference: \", title]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 23\n              }, this)]\n            }, message._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 21\n            }, this);\n          }\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"posts\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Messages from You!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), messages.map(message => {\n          const fromUserID = message.fromUser._id;\n\n          if (userID === fromUserID) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"messages-from-you\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: message.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 23\n              }, this)\n            }, message._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 21\n            }, this);\n          }\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading your messages....\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this);\n  }\n};\n\n_s(Profile, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useEffect","Profile","user","getMe","posts","messages","userID","_id","getUserPosts","post","isAuthor","userPosts","map","title","description","location","price","willDeliver","toString","message","fromUserID","fromUser","username","content"],"sources":["/Users/francis/Desktop/Bootcamp/Stranger's Things/src/components/Profile.js"],"sourcesContent":["import React, {useEffect} from \"react\";\nimport '../style.css'\nconst Profile = ({user, getMe, posts}) => {\n  useEffect(() => {\n    getMe();\n  }, [])\n    const messages = user.messages;\n    const userID = user._id;\n    function getUserPosts (post) {\n      const {isAuthor} = post;\n      if(isAuthor === true){\n        return post\n      }\n    }\n    const userPosts = posts.map(post => getUserPosts(post))\n    if(userPosts){\n      return (\n        <div>\n          <h1>Your Posts!</h1>\n          {\n            userPosts.map(post => {\n              const {title, description, location, price, willDeliver, isAuthor, _id} = post;\n              return (\n                <div key={_id} className=\"posts\">\n                  <h3>{title}</h3>\n                        <p>Description: {description}</p>\n                        <p>Location: {location}</p>\n                        <p>Price: {price}</p>\n                        <p>Will Deliver: {[willDeliver].toString()}</p>\n                </div>\n              )\n            })\n          }\n        </div>\n      )\n    }\n    if(messages){\n      return (\n        <div>\n          <div className=\"posts\">\n            <h1>Messages from other users!</h1>\n            {\n               messages.map(message => {\n                const fromUserID = message.fromUser._id;\n                const {username} = message.fromUser;\n                const {title} = message.post;\n                \n                if (userID !== fromUserID) {\n                  return (\n                    <div className=\"messages-from-you\" key={message._id}>\n                      <p>From User: {username} </p>\n                      <p>Message: {message.content}</p>\n                      <p>Post Reference: {title}</p>\n                    </div>\n                  )\n                }\n              })    \n            }\n          </div>\n          <div className=\"posts\">\n            <h1>Messages from You!</h1>\n            {\n             messages.map(message => {\n                const fromUserID = message.fromUser._id;\n                \n                if (userID === fromUserID) {\n                  return (\n                    <div className=\"messages-from-you\" key={message._id}>\n                      <p>\n                      {message.content}\n                      </p>\n                      </div>\n                  )\n                }\n              })    \n            }\n          </div>\n        </div>\n      )\n    } else {\n      return (\n        <div>Loading your messages....</div>\n      )\n    }\n}\n\nexport default Profile"],"mappings":"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"},"metadata":{},"sourceType":"module"}